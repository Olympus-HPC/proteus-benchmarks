const char* const kernel5_cpp =
"template<\n"
"    const int start0, const int N0, \n"
"    const int start1, const int N1,\n"
"    const int start2, const int N2,\n"
"    const int ifirst, const int ilast,\n"
"    const int jfirst, const int jlast,\n"
"    const int kfirst, const int klast,\n"
"    const int nk,\n"
"    const float_sw4 a1, const float_sw4 sgn\n"
">\n"
"__global__ \n"
"void kernel5(\n"
"    const float_sw4* __restrict__ a_u, \n"
"    const float_sw4* __restrict__ a_mu,\n"
"    const float_sw4* __restrict__ a_lambda,\n"
"    const float_sw4* __restrict__ a_met,\n"
"    const float_sw4* __restrict__ a_jac,\n"
"          float_sw4* __restrict__ a_lu, \n"
"    const float_sw4* __restrict__ a_acof, \n"
"    const float_sw4* __restrict__ a_bope,\n"
"    const float_sw4* __restrict__ a_ghcof, \n"
"    const float_sw4* __restrict__ a_acof_no_gp,\n"
"    const float_sw4* __restrict__ a_ghcof_no_gp, \n"
"    const float_sw4* __restrict__ a_strx,\n"
"    const float_sw4* __restrict__ a_stry ) \n"
"{\n"
"\n"
"  int i = start0 + threadIdx.x + blockIdx.x * blockDim.x;\n"
"  int j = start1 + threadIdx.y + blockIdx.y * blockDim.y;\n"
"  int k = start2 + threadIdx.z + blockIdx.z * blockDim.z;\n"
"  if ((i < N0) && (j < N1) && (k < N2)) {\n"
"    // 5 ops\n"
"    float_sw4 ijac = strx(i) * stry(j) / jac(i, j, k);\n"
"    float_sw4 istry = 1 / (stry(j));\n"
"    float_sw4 istrx = 1 / (strx(i));\n"
"    float_sw4 istrxy = istry * istrx;\n"
"\n"
"    float_sw4 r1 = 0, r2 = 0, r3 = 0;\n"
"\n"
"    // pp derivative (u) (u-eq)\n"
"    // 53 ops, tot=58\n"
"    float_sw4 cof1 = (2 * mu(i - 2, j, k) + la(i - 2, j, k)) *\n"
"      met(1, i - 2, j, k) * met(1, i - 2, j, k) *\n"
"      strx(i - 2);\n"
"    float_sw4 cof2 = (2 * mu(i - 1, j, k) + la(i - 1, j, k)) *\n"
"      met(1, i - 1, j, k) * met(1, i - 1, j, k) *\n"
"      strx(i - 1);\n"
"    float_sw4 cof3 = (2 * mu(i, j, k) + la(i, j, k)) * met(1, i, j, k) *\n"
"      met(1, i, j, k) * strx(i);\n"
"    float_sw4 cof4 = (2 * mu(i + 1, j, k) + la(i + 1, j, k)) *\n"
"      met(1, i + 1, j, k) * met(1, i + 1, j, k) *\n"
"      strx(i + 1);\n"
"    float_sw4 cof5 = (2 * mu(i + 2, j, k) + la(i + 2, j, k)) *\n"
"      met(1, i + 2, j, k) * met(1, i + 2, j, k) *\n"
"      strx(i + 2);\n"
"\n"
"    float_sw4 mux1 = cof2 - tf * (cof3 + cof1);\n"
"    float_sw4 mux2 = cof1 + cof4 + 3 * (cof3 + cof2);\n"
"    float_sw4 mux3 = cof2 + cof5 + 3 * (cof4 + cof3);\n"
"    float_sw4 mux4 = cof4 - tf * (cof3 + cof5);\n"
"\n"
"    r1 = r1 + i6 *\n"
"      (mux1 * (u(1, i - 2, j, k) - u(1, i, j, k)) +\n"
"       mux2 * (u(1, i - 1, j, k) - u(1, i, j, k)) +\n"
"       mux3 * (u(1, i + 1, j, k) - u(1, i, j, k)) +\n"
"       mux4 * (u(1, i + 2, j, k) - u(1, i, j, k))) *\n"
"      istry;\n"
"\n"
"    // qq derivative (u) (u-eq)\n"
"    // 43 ops, tot=101\n"
"    cof1 = (mu(i, j - 2, k)) * met(1, i, j - 2, k) * met(1, i, j - 2, k) *\n"
"      stry(j - 2);\n"
"    cof2 = (mu(i, j - 1, k)) * met(1, i, j - 1, k) * met(1, i, j - 1, k) *\n"
"      stry(j - 1);\n"
"    cof3 = (mu(i, j, k)) * met(1, i, j, k) * met(1, i, j, k) * stry(j);\n"
"    cof4 = (mu(i, j + 1, k)) * met(1, i, j + 1, k) * met(1, i, j + 1, k) *\n"
"      stry(j + 1);\n"
"    cof5 = (mu(i, j + 2, k)) * met(1, i, j + 2, k) * met(1, i, j + 2, k) *\n"
"      stry(j + 2);\n"
"\n"
"    mux1 = cof2 - tf * (cof3 + cof1);\n"
"    mux2 = cof1 + cof4 + 3 * (cof3 + cof2);\n"
"    mux3 = cof2 + cof5 + 3 * (cof4 + cof3);\n"
"    mux4 = cof4 - tf * (cof3 + cof5);\n"
"\n"
"    r1 = r1 + i6 *\n"
"      (mux1 * (u(1, i, j - 2, k) - u(1, i, j, k)) +\n"
"       mux2 * (u(1, i, j - 1, k) - u(1, i, j, k)) +\n"
"       mux3 * (u(1, i, j + 1, k) - u(1, i, j, k)) +\n"
"       mux4 * (u(1, i, j + 2, k) - u(1, i, j, k))) *\n"
"      istrx;\n"
"\n"
"    // pp derivative (v) (v-eq)\n"
"    // 43 ops, tot=144\n"
"    cof1 = (mu(i - 2, j, k)) * met(1, i - 2, j, k) * met(1, i - 2, j, k) *\n"
"      strx(i - 2);\n"
"    cof2 = (mu(i - 1, j, k)) * met(1, i - 1, j, k) * met(1, i - 1, j, k) *\n"
"      strx(i - 1);\n"
"    cof3 = (mu(i, j, k)) * met(1, i, j, k) * met(1, i, j, k) * strx(i);\n"
"    cof4 = (mu(i + 1, j, k)) * met(1, i + 1, j, k) * met(1, i + 1, j, k) *\n"
"      strx(i + 1);\n"
"    cof5 = (mu(i + 2, j, k)) * met(1, i + 2, j, k) * met(1, i + 2, j, k) *\n"
"      strx(i + 2);\n"
"\n"
"    mux1 = cof2 - tf * (cof3 + cof1);\n"
"    mux2 = cof1 + cof4 + 3 * (cof3 + cof2);\n"
"    mux3 = cof2 + cof5 + 3 * (cof4 + cof3);\n"
"    mux4 = cof4 - tf * (cof3 + cof5);\n"
"\n"
"    r2 = r2 + i6 *\n"
"      (mux1 * (u(2, i - 2, j, k) - u(2, i, j, k)) +\n"
"       mux2 * (u(2, i - 1, j, k) - u(2, i, j, k)) +\n"
"       mux3 * (u(2, i + 1, j, k) - u(2, i, j, k)) +\n"
"       mux4 * (u(2, i + 2, j, k) - u(2, i, j, k))) *\n"
"      istry;\n"
"\n"
"    // qq derivative (v) (v-eq)\n"
"    // 53 ops, tot=197\n"
"    cof1 = (2 * mu(i, j - 2, k) + la(i, j - 2, k)) * met(1, i, j - 2, k) *\n"
"      met(1, i, j - 2, k) * stry(j - 2);\n"
"    cof2 = (2 * mu(i, j - 1, k) + la(i, j - 1, k)) * met(1, i, j - 1, k) *\n"
"      met(1, i, j - 1, k) * stry(j - 1);\n"
"    cof3 = (2 * mu(i, j, k) + la(i, j, k)) * met(1, i, j, k) *\n"
"      met(1, i, j, k) * stry(j);\n"
"    cof4 = (2 * mu(i, j + 1, k) + la(i, j + 1, k)) * met(1, i, j + 1, k) *\n"
"      met(1, i, j + 1, k) * stry(j + 1);\n"
"    cof5 = (2 * mu(i, j + 2, k) + la(i, j + 2, k)) * met(1, i, j + 2, k) *\n"
"      met(1, i, j + 2, k) * stry(j + 2);\n"
"    mux1 = cof2 - tf * (cof3 + cof1);\n"
"    mux2 = cof1 + cof4 + 3 * (cof3 + cof2);\n"
"    mux3 = cof2 + cof5 + 3 * (cof4 + cof3);\n"
"    mux4 = cof4 - tf * (cof3 + cof5);\n"
"\n"
"    r2 = r2 + i6 *\n"
"      (mux1 * (u(2, i, j - 2, k) - u(2, i, j, k)) +\n"
"       mux2 * (u(2, i, j - 1, k) - u(2, i, j, k)) +\n"
"       mux3 * (u(2, i, j + 1, k) - u(2, i, j, k)) +\n"
"       mux4 * (u(2, i, j + 2, k) - u(2, i, j, k))) *\n"
"      istrx;\n"
"\n"
"    // pp derivative (w) (w-eq)\n"
"    // 43 ops, tot=240\n"
"    cof1 = (mu(i - 2, j, k)) * met(1, i - 2, j, k) * met(1, i - 2, j, k) *\n"
"      strx(i - 2);\n"
"    cof2 = (mu(i - 1, j, k)) * met(1, i - 1, j, k) * met(1, i - 1, j, k) *\n"
"      strx(i - 1);\n"
"    cof3 = (mu(i, j, k)) * met(1, i, j, k) * met(1, i, j, k) * strx(i);\n"
"    cof4 = (mu(i + 1, j, k)) * met(1, i + 1, j, k) * met(1, i + 1, j, k) *\n"
"      strx(i + 1);\n"
"    cof5 = (mu(i + 2, j, k)) * met(1, i + 2, j, k) * met(1, i + 2, j, k) *\n"
"      strx(i + 2);\n"
"\n"
"    mux1 = cof2 - tf * (cof3 + cof1);\n"
"    mux2 = cof1 + cof4 + 3 * (cof3 + cof2);\n"
"    mux3 = cof2 + cof5 + 3 * (cof4 + cof3);\n"
"    mux4 = cof4 - tf * (cof3 + cof5);\n"
"\n"
"    r3 = r3 + i6 *\n"
"      (mux1 * (u(3, i - 2, j, k) - u(3, i, j, k)) +\n"
"       mux2 * (u(3, i - 1, j, k) - u(3, i, j, k)) +\n"
"       mux3 * (u(3, i + 1, j, k) - u(3, i, j, k)) +\n"
"       mux4 * (u(3, i + 2, j, k) - u(3, i, j, k))) *\n"
"      istry;\n"
"\n"
"    // qq derivative (w) (w-eq)\n"
"    // 43 ops, tot=283\n"
"    cof1 = (mu(i, j - 2, k)) * met(1, i, j - 2, k) * met(1, i, j - 2, k) *\n"
"      stry(j - 2);\n"
"    cof2 = (mu(i, j - 1, k)) * met(1, i, j - 1, k) * met(1, i, j - 1, k) *\n"
"      stry(j - 1);\n"
"    cof3 = (mu(i, j, k)) * met(1, i, j, k) * met(1, i, j, k) * stry(j);\n"
"    cof4 = (mu(i, j + 1, k)) * met(1, i, j + 1, k) * met(1, i, j + 1, k) *\n"
"      stry(j + 1);\n"
"    cof5 = (mu(i, j + 2, k)) * met(1, i, j + 2, k) * met(1, i, j + 2, k) *\n"
"      stry(j + 2);\n"
"    mux1 = cof2 - tf * (cof3 + cof1);\n"
"    mux2 = cof1 + cof4 + 3 * (cof3 + cof2);\n"
"    mux3 = cof2 + cof5 + 3 * (cof4 + cof3);\n"
"    mux4 = cof4 - tf * (cof3 + cof5);\n"
"\n"
"    r3 = r3 + i6 *\n"
"      (mux1 * (u(3, i, j - 2, k) - u(3, i, j, k)) +\n"
"       mux2 * (u(3, i, j - 1, k) - u(3, i, j, k)) +\n"
"       mux3 * (u(3, i, j + 1, k) - u(3, i, j, k)) +\n"
"       mux4 * (u(3, i, j + 2, k) - u(3, i, j, k))) *\n"
"      istrx;\n"
"\n"
"    // All rr-derivatives at once\n"
"    // averaging the coefficient\n"
"    // 54*8*8+25*8 = 3656 ops, tot=3939\n"
"    float_sw4 mucofu2, mucofuv, mucofuw, mucofvw, mucofv2, mucofw2;\n"
"    //#pragma unroll 8\n"
"    for (int q = nk - 7; q <= nk; q++) {\n"
"      mucofu2 = 0;\n"
"      mucofuv = 0;\n"
"      mucofuw = 0;\n"
"      mucofvw = 0;\n"
"      mucofv2 = 0;\n"
"      mucofw2 = 0;\n"
"      //#pragma unroll 8\n"
"      for (int m = nk - 7; m <= nk; m++) {\n"
"        mucofu2 += acof_no_gp(nk - k + 1, nk - q + 1, nk - m + 1) *\n"
"          ((2 * mu(i, j, m) + la(i, j, m)) * met(2, i, j, m) *\n"
"           strx(i) * met(2, i, j, m) * strx(i) +\n"
"           mu(i, j, m) * (met(3, i, j, m) * stry(j) *\n"
"             met(3, i, j, m) * stry(j) +\n"
"             met(4, i, j, m) * met(4, i, j, m)));\n"
"        mucofv2 += acof_no_gp(nk - k + 1, nk - q + 1, nk - m + 1) *\n"
"          ((2 * mu(i, j, m) + la(i, j, m)) * met(3, i, j, m) *\n"
"           stry(j) * met(3, i, j, m) * stry(j) +\n"
"           mu(i, j, m) * (met(2, i, j, m) * strx(i) *\n"
"             met(2, i, j, m) * strx(i) +\n"
"             met(4, i, j, m) * met(4, i, j, m)));\n"
"        mucofw2 +=\n"
"          acof_no_gp(nk - k + 1, nk - q + 1, nk - m + 1) *\n"
"          ((2 * mu(i, j, m) + la(i, j, m)) * met(4, i, j, m) *\n"
"           met(4, i, j, m) +\n"
"           mu(i, j, m) *\n"
"           (met(2, i, j, m) * strx(i) * met(2, i, j, m) * strx(i) +\n"
"            met(3, i, j, m) * stry(j) * met(3, i, j, m) * stry(j)));\n"
"        mucofuv += acof_no_gp(nk - k + 1, nk - q + 1, nk - m + 1) *\n"
"          (mu(i, j, m) + la(i, j, m)) * met(2, i, j, m) *\n"
"          met(3, i, j, m);\n"
"        mucofuw += acof_no_gp(nk - k + 1, nk - q + 1, nk - m + 1) *\n"
"          (mu(i, j, m) + la(i, j, m)) * met(2, i, j, m) *\n"
"          met(4, i, j, m);\n"
"        mucofvw += acof_no_gp(nk - k + 1, nk - q + 1, nk - m + 1) *\n"
"          (mu(i, j, m) + la(i, j, m)) * met(3, i, j, m) *\n"
"          met(4, i, j, m);\n"
"      }\n"
"\n"
"      // Computing the second derivative,\n"
"      r1 += istrxy * mucofu2 * u(1, i, j, q) + mucofuv * u(2, i, j, q) +\n"
"        istry * mucofuw * u(3, i, j, q);\n"
"      r2 += mucofuv * u(1, i, j, q) + istrxy * mucofv2 * u(2, i, j, q) +\n"
"        istrx * mucofvw * u(3, i, j, q);\n"
"      r3 += istry * mucofuw * u(1, i, j, q) +\n"
"        istrx * mucofvw * u(2, i, j, q) +\n"
"        istrxy * mucofw2 * u(3, i, j, q);\n"
"    }\n"
"\n"
"    // Ghost point values, only nonzero for k=nk.\n"
"    // 72 ops., tot=4011\n"
"    mucofu2 = ghcof_no_gp(nk - k + 1) *\n"
"      ((2 * mu(i, j, nk) + la(i, j, nk)) * met(2, i, j, nk) *\n"
"       strx(i) * met(2, i, j, nk) * strx(i) +\n"
"       mu(i, j, nk) * (met(3, i, j, nk) * stry(j) *\n"
"         met(3, i, j, nk) * stry(j) +\n"
"         met(4, i, j, nk) * met(4, i, j, nk)));\n"
"    mucofv2 = ghcof_no_gp(nk - k + 1) *\n"
"      ((2 * mu(i, j, nk) + la(i, j, nk)) * met(3, i, j, nk) *\n"
"       stry(j) * met(3, i, j, nk) * stry(j) +\n"
"       mu(i, j, nk) * (met(2, i, j, nk) * strx(i) *\n"
"         met(2, i, j, nk) * strx(i) +\n"
"         met(4, i, j, nk) * met(4, i, j, nk)));\n"
"    mucofw2 =\n"
"      ghcof_no_gp(nk - k + 1) *\n"
"      ((2 * mu(i, j, nk) + la(i, j, nk)) * met(4, i, j, nk) *\n"
"       met(4, i, j, nk) +\n"
"       mu(i, j, nk) *\n"
"       (met(2, i, j, nk) * strx(i) * met(2, i, j, nk) * strx(i) +\n"
"        met(3, i, j, nk) * stry(j) * met(3, i, j, nk) * stry(j)));\n"
"    mucofuv = ghcof_no_gp(nk - k + 1) * (mu(i, j, nk) + la(i, j, nk)) *\n"
"      met(2, i, j, nk) * met(3, i, j, nk);\n"
"    mucofuw = ghcof_no_gp(nk - k + 1) * (mu(i, j, nk) + la(i, j, nk)) *\n"
"      met(2, i, j, nk) * met(4, i, j, nk);\n"
"    mucofvw = ghcof_no_gp(nk - k + 1) * (mu(i, j, nk) + la(i, j, nk)) *\n"
"      met(3, i, j, nk) * met(4, i, j, nk);\n"
"    r1 += istrxy * mucofu2 * u(1, i, j, nk + 1) +\n"
"      mucofuv * u(2, i, j, nk + 1) +\n"
"      istry * mucofuw * u(3, i, j, nk + 1);\n"
"    r2 += mucofuv * u(1, i, j, nk + 1) +\n"
"      istrxy * mucofv2 * u(2, i, j, nk + 1) +\n"
"      istrx * mucofvw * u(3, i, j, nk + 1);\n"
"    r3 += istry * mucofuw * u(1, i, j, nk + 1) +\n"
"      istrx * mucofvw * u(2, i, j, nk + 1) +\n"
"      istrxy * mucofw2 * u(3, i, j, nk + 1);\n"
"\n"
"    // pq-derivatives (u-eq)\n"
"    // 38 ops., tot=4049\n"
"    r1 +=\n"
"      c2 *\n"
"      (mu(i, j + 2, k) * met(1, i, j + 2, k) * met(1, i, j + 2, k) *\n"
"       (c2 * (u(2, i + 2, j + 2, k) - u(2, i - 2, j + 2, k)) +\n"
"        c1 * (u(2, i + 1, j + 2, k) - u(2, i - 1, j + 2, k))) -\n"
"       mu(i, j - 2, k) * met(1, i, j - 2, k) * met(1, i, j - 2, k) *\n"
"       (c2 * (u(2, i + 2, j - 2, k) - u(2, i - 2, j - 2, k)) +\n"
"        c1 * (u(2, i + 1, j - 2, k) - u(2, i - 1, j - 2, k)))) +\n"
"      c1 *\n"
"      (mu(i, j + 1, k) * met(1, i, j + 1, k) * met(1, i, j + 1, k) *\n"
"       (c2 * (u(2, i + 2, j + 1, k) - u(2, i - 2, j + 1, k)) +\n"
"        c1 * (u(2, i + 1, j + 1, k) - u(2, i - 1, j + 1, k))) -\n"
"       mu(i, j - 1, k) * met(1, i, j - 1, k) * met(1, i, j - 1, k) *\n"
"       (c2 * (u(2, i + 2, j - 1, k) - u(2, i - 2, j - 1, k)) +\n"
"        c1 * (u(2, i + 1, j - 1, k) - u(2, i - 1, j - 1, k))));\n"
"\n"
"    // qp-derivatives (u-eq)\n"
"    // 38 ops. tot=4087\n"
"    r1 +=\n"
"      c2 *\n"
"      (la(i + 2, j, k) * met(1, i + 2, j, k) * met(1, i + 2, j, k) *\n"
"       (c2 * (u(2, i + 2, j + 2, k) - u(2, i + 2, j - 2, k)) +\n"
"        c1 * (u(2, i + 2, j + 1, k) - u(2, i + 2, j - 1, k))) -\n"
"       la(i - 2, j, k) * met(1, i - 2, j, k) * met(1, i - 2, j, k) *\n"
"       (c2 * (u(2, i - 2, j + 2, k) - u(2, i - 2, j - 2, k)) +\n"
"        c1 * (u(2, i - 2, j + 1, k) - u(2, i - 2, j - 1, k)))) +\n"
"      c1 *\n"
"      (la(i + 1, j, k) * met(1, i + 1, j, k) * met(1, i + 1, j, k) *\n"
"       (c2 * (u(2, i + 1, j + 2, k) - u(2, i + 1, j - 2, k)) +\n"
"        c1 * (u(2, i + 1, j + 1, k) - u(2, i + 1, j - 1, k))) -\n"
"       la(i - 1, j, k) * met(1, i - 1, j, k) * met(1, i - 1, j, k) *\n"
"       (c2 * (u(2, i - 1, j + 2, k) - u(2, i - 1, j - 2, k)) +\n"
"        c1 * (u(2, i - 1, j + 1, k) - u(2, i - 1, j - 1, k))));\n"
"\n"
"    // pq-derivatives (v-eq)\n"
"    // 38 ops. , tot=4125\n"
"    r2 +=\n"
"      c2 *\n"
"      (la(i, j + 2, k) * met(1, i, j + 2, k) * met(1, i, j + 2, k) *\n"
"       (c2 * (u(1, i + 2, j + 2, k) - u(1, i - 2, j + 2, k)) +\n"
"        c1 * (u(1, i + 1, j + 2, k) - u(1, i - 1, j + 2, k))) -\n"
"       la(i, j - 2, k) * met(1, i, j - 2, k) * met(1, i, j - 2, k) *\n"
"       (c2 * (u(1, i + 2, j - 2, k) - u(1, i - 2, j - 2, k)) +\n"
"        c1 * (u(1, i + 1, j - 2, k) - u(1, i - 1, j - 2, k)))) +\n"
"      c1 *\n"
"      (la(i, j + 1, k) * met(1, i, j + 1, k) * met(1, i, j + 1, k) *\n"
"       (c2 * (u(1, i + 2, j + 1, k) - u(1, i - 2, j + 1, k)) +\n"
"        c1 * (u(1, i + 1, j + 1, k) - u(1, i - 1, j + 1, k))) -\n"
"       la(i, j - 1, k) * met(1, i, j - 1, k) * met(1, i, j - 1, k) *\n"
"       (c2 * (u(1, i + 2, j - 1, k) - u(1, i - 2, j - 1, k)) +\n"
"        c1 * (u(1, i + 1, j - 1, k) - u(1, i - 1, j - 1, k))));\n"
"\n"
"    //* qp-derivatives (v-eq)\n"
"    // 38 ops., tot=4163\n"
"    r2 +=\n"
"      c2 *\n"
"      (mu(i + 2, j, k) * met(1, i + 2, j, k) * met(1, i + 2, j, k) *\n"
"       (c2 * (u(1, i + 2, j + 2, k) - u(1, i + 2, j - 2, k)) +\n"
"        c1 * (u(1, i + 2, j + 1, k) - u(1, i + 2, j - 1, k))) -\n"
"       mu(i - 2, j, k) * met(1, i - 2, j, k) * met(1, i - 2, j, k) *\n"
"       (c2 * (u(1, i - 2, j + 2, k) - u(1, i - 2, j - 2, k)) +\n"
"        c1 * (u(1, i - 2, j + 1, k) - u(1, i - 2, j - 1, k)))) +\n"
"      c1 *\n"
"      (mu(i + 1, j, k) * met(1, i + 1, j, k) * met(1, i + 1, j, k) *\n"
"       (c2 * (u(1, i + 1, j + 2, k) - u(1, i + 1, j - 2, k)) +\n"
"        c1 * (u(1, i + 1, j + 1, k) - u(1, i + 1, j - 1, k))) -\n"
"       mu(i - 1, j, k) * met(1, i - 1, j, k) * met(1, i - 1, j, k) *\n"
"       (c2 * (u(1, i - 1, j + 2, k) - u(1, i - 1, j - 2, k)) +\n"
"        c1 * (u(1, i - 1, j + 1, k) - u(1, i - 1, j - 1, k))));\n"
"\n"
"    // rp - derivatives\n"
"    // 24*8 = 192 ops, tot=4355\n"
"    float_sw4 dudrm2 = 0, dudrm1 = 0, dudrp1 = 0, dudrp2 = 0;\n"
"    float_sw4 dvdrm2 = 0, dvdrm1 = 0, dvdrp1 = 0, dvdrp2 = 0;\n"
"    float_sw4 dwdrm2 = 0, dwdrm1 = 0, dwdrp1 = 0, dwdrp2 = 0;\n"
"    //#pragma unroll 8\n"
"    for (int q = nk - 7; q <= nk; q++) {\n"
"      dudrm2 -= bope(nk - k + 1, nk - q + 1) * u(1, i - 2, j, q);\n"
"      dvdrm2 -= bope(nk - k + 1, nk - q + 1) * u(2, i - 2, j, q);\n"
"      dwdrm2 -= bope(nk - k + 1, nk - q + 1) * u(3, i - 2, j, q);\n"
"      dudrm1 -= bope(nk - k + 1, nk - q + 1) * u(1, i - 1, j, q);\n"
"      dvdrm1 -= bope(nk - k + 1, nk - q + 1) * u(2, i - 1, j, q);\n"
"      dwdrm1 -= bope(nk - k + 1, nk - q + 1) * u(3, i - 1, j, q);\n"
"      dudrp2 -= bope(nk - k + 1, nk - q + 1) * u(1, i + 2, j, q);\n"
"      dvdrp2 -= bope(nk - k + 1, nk - q + 1) * u(2, i + 2, j, q);\n"
"      dwdrp2 -= bope(nk - k + 1, nk - q + 1) * u(3, i + 2, j, q);\n"
"      dudrp1 -= bope(nk - k + 1, nk - q + 1) * u(1, i + 1, j, q);\n"
"      dvdrp1 -= bope(nk - k + 1, nk - q + 1) * u(2, i + 1, j, q);\n"
"      dwdrp1 -= bope(nk - k + 1, nk - q + 1) * u(3, i + 1, j, q);\n"
"    }\n"
"\n"
"    // rp derivatives (u-eq)\n"
"    // 67 ops, tot=4422\n"
"    r1 += (c2 * ((2 * mu(i + 2, j, k) + la(i + 2, j, k)) *\n"
"          met(2, i + 2, j, k) * met(1, i + 2, j, k) *\n"
"          strx(i + 2) * dudrp2 +\n"
"          la(i + 2, j, k) * met(3, i + 2, j, k) *\n"
"          met(1, i + 2, j, k) * dvdrp2 * stry(j) +\n"
"          la(i + 2, j, k) * met(4, i + 2, j, k) *\n"
"          met(1, i + 2, j, k) * dwdrp2 -\n"
"          ((2 * mu(i - 2, j, k) + la(i - 2, j, k)) *\n"
"           met(2, i - 2, j, k) * met(1, i - 2, j, k) *\n"
"           strx(i - 2) * dudrm2 +\n"
"           la(i - 2, j, k) * met(3, i - 2, j, k) *\n"
"           met(1, i - 2, j, k) * dvdrm2 * stry(j) +\n"
"           la(i - 2, j, k) * met(4, i - 2, j, k) *\n"
"           met(1, i - 2, j, k) * dwdrm2)) +\n"
"        c1 * ((2 * mu(i + 1, j, k) + la(i + 1, j, k)) *\n"
"          met(2, i + 1, j, k) * met(1, i + 1, j, k) *\n"
"          strx(i + 1) * dudrp1 +\n"
"          la(i + 1, j, k) * met(3, i + 1, j, k) *\n"
"          met(1, i + 1, j, k) * dvdrp1 * stry(j) +\n"
"          la(i + 1, j, k) * met(4, i + 1, j, k) *\n"
"          met(1, i + 1, j, k) * dwdrp1 -\n"
"          ((2 * mu(i - 1, j, k) + la(i - 1, j, k)) *\n"
"           met(2, i - 1, j, k) * met(1, i - 1, j, k) *\n"
"           strx(i - 1) * dudrm1 +\n"
"           la(i - 1, j, k) * met(3, i - 1, j, k) *\n"
"           met(1, i - 1, j, k) * dvdrm1 * stry(j) +\n"
"           la(i - 1, j, k) * met(4, i - 1, j, k) *\n"
"           met(1, i - 1, j, k) * dwdrm1))) *\n"
"           istry;\n"
"\n"
"    // rp derivatives (v-eq)\n"
"    // 42 ops, tot=4464\n"
"    r2 +=\n"
"      c2 * (mu(i + 2, j, k) * met(3, i + 2, j, k) *\n"
"          met(1, i + 2, j, k) * dudrp2 +\n"
"          mu(i + 2, j, k) * met(2, i + 2, j, k) *\n"
"          met(1, i + 2, j, k) * dvdrp2 * strx(i + 2) * istry -\n"
"          (mu(i - 2, j, k) * met(3, i - 2, j, k) *\n"
"           met(1, i - 2, j, k) * dudrm2 +\n"
"           mu(i - 2, j, k) * met(2, i - 2, j, k) *\n"
"           met(1, i - 2, j, k) * dvdrm2 * strx(i - 2) * istry)) +\n"
"      c1 * (mu(i + 1, j, k) * met(3, i + 1, j, k) *\n"
"          met(1, i + 1, j, k) * dudrp1 +\n"
"          mu(i + 1, j, k) * met(2, i + 1, j, k) *\n"
"          met(1, i + 1, j, k) * dvdrp1 * strx(i + 1) * istry -\n"
"          (mu(i - 1, j, k) * met(3, i - 1, j, k) *\n"
"           met(1, i - 1, j, k) * dudrm1 +\n"
"           mu(i - 1, j, k) * met(2, i - 1, j, k) *\n"
"           met(1, i - 1, j, k) * dvdrm1 * strx(i - 1) * istry));\n"
"\n"
"    // rp derivatives (w-eq)\n"
"    // 38 ops, tot=4502\n"
"    r3 +=\n"
"      istry * (c2 * (mu(i + 2, j, k) * met(4, i + 2, j, k) *\n"
"            met(1, i + 2, j, k) * dudrp2 +\n"
"            mu(i + 2, j, k) * met(2, i + 2, j, k) *\n"
"            met(1, i + 2, j, k) * dwdrp2 * strx(i + 2) -\n"
"            (mu(i - 2, j, k) * met(4, i - 2, j, k) *\n"
"             met(1, i - 2, j, k) * dudrm2 +\n"
"             mu(i - 2, j, k) * met(2, i - 2, j, k) *\n"
"             met(1, i - 2, j, k) * dwdrm2 * strx(i - 2))) +\n"
"          c1 * (mu(i + 1, j, k) * met(4, i + 1, j, k) *\n"
"            met(1, i + 1, j, k) * dudrp1 +\n"
"            mu(i + 1, j, k) * met(2, i + 1, j, k) *\n"
"            met(1, i + 1, j, k) * dwdrp1 * strx(i + 1) -\n"
"            (mu(i - 1, j, k) * met(4, i - 1, j, k) *\n"
"             met(1, i - 1, j, k) * dudrm1 +\n"
"             mu(i - 1, j, k) * met(2, i - 1, j, k) *\n"
"             met(1, i - 1, j, k) * dwdrm1 * strx(i - 1))));\n"
"\n"
"    // rq - derivatives\n"
"    // 24*8 = 192 ops , tot=4694\n"
"\n"
"    dudrm2 = 0;\n"
"    dudrm1 = 0;\n"
"    dudrp1 = 0;\n"
"    dudrp2 = 0;\n"
"    dvdrm2 = 0;\n"
"    dvdrm1 = 0;\n"
"    dvdrp1 = 0;\n"
"    dvdrp2 = 0;\n"
"    dwdrm2 = 0;\n"
"    dwdrm1 = 0;\n"
"    dwdrp1 = 0;\n"
"    dwdrp2 = 0;\n"
"    //#pragma unroll 8\n"
"    for (int q = nk - 7; q <= nk; q++) {\n"
"      dudrm2 -= bope(nk - k + 1, nk - q + 1) * u(1, i, j - 2, q);\n"
"      dvdrm2 -= bope(nk - k + 1, nk - q + 1) * u(2, i, j - 2, q);\n"
"      dwdrm2 -= bope(nk - k + 1, nk - q + 1) * u(3, i, j - 2, q);\n"
"      dudrm1 -= bope(nk - k + 1, nk - q + 1) * u(1, i, j - 1, q);\n"
"      dvdrm1 -= bope(nk - k + 1, nk - q + 1) * u(2, i, j - 1, q);\n"
"      dwdrm1 -= bope(nk - k + 1, nk - q + 1) * u(3, i, j - 1, q);\n"
"      dudrp2 -= bope(nk - k + 1, nk - q + 1) * u(1, i, j + 2, q);\n"
"      dvdrp2 -= bope(nk - k + 1, nk - q + 1) * u(2, i, j + 2, q);\n"
"      dwdrp2 -= bope(nk - k + 1, nk - q + 1) * u(3, i, j + 2, q);\n"
"      dudrp1 -= bope(nk - k + 1, nk - q + 1) * u(1, i, j + 1, q);\n"
"      dvdrp1 -= bope(nk - k + 1, nk - q + 1) * u(2, i, j + 1, q);\n"
"      dwdrp1 -= bope(nk - k + 1, nk - q + 1) * u(3, i, j + 1, q);\n"
"    }\n"
"\n"
"    // rq derivatives (u-eq)\n"
"    // 42 ops, tot=4736\n"
"    r1 += c2 * (mu(i, j + 2, k) * met(3, i, j + 2, k) *\n"
"        met(1, i, j + 2, k) * dudrp2 * stry(j + 2) * istrx +\n"
"        mu(i, j + 2, k) * met(2, i, j + 2, k) *\n"
"        met(1, i, j + 2, k) * dvdrp2 -\n"
"        (mu(i, j - 2, k) * met(3, i, j - 2, k) *\n"
"         met(1, i, j - 2, k) * dudrm2 * stry(j - 2) * istrx +\n"
"         mu(i, j - 2, k) * met(2, i, j - 2, k) *\n"
"         met(1, i, j - 2, k) * dvdrm2)) +\n"
"      c1 * (mu(i, j + 1, k) * met(3, i, j + 1, k) *\n"
"          met(1, i, j + 1, k) * dudrp1 * stry(j + 1) * istrx +\n"
"          mu(i, j + 1, k) * met(2, i, j + 1, k) *\n"
"          met(1, i, j + 1, k) * dvdrp1 -\n"
"          (mu(i, j - 1, k) * met(3, i, j - 1, k) *\n"
"           met(1, i, j - 1, k) * dudrm1 * stry(j - 1) * istrx +\n"
"           mu(i, j - 1, k) * met(2, i, j - 1, k) *\n"
"           met(1, i, j - 1, k) * dvdrm1));\n"
"\n"
"    // rq derivatives (v-eq)\n"
"    // 70 ops, tot=4806\n"
"    r2 += c2 * (la(i, j + 2, k) * met(2, i, j + 2, k) *\n"
"        met(1, i, j + 2, k) * dudrp2 +\n"
"        (2 * mu(i, j + 2, k) + la(i, j + 2, k)) *\n"
"        met(3, i, j + 2, k) * met(1, i, j + 2, k) * dvdrp2 *\n"
"        stry(j + 2) * istrx +\n"
"        la(i, j + 2, k) * met(4, i, j + 2, k) *\n"
"        met(1, i, j + 2, k) * dwdrp2 * istrx -\n"
"        (la(i, j - 2, k) * met(2, i, j - 2, k) *\n"
"         met(1, i, j - 2, k) * dudrm2 +\n"
"         (2 * mu(i, j - 2, k) + la(i, j - 2, k)) *\n"
"         met(3, i, j - 2, k) * met(1, i, j - 2, k) * dvdrm2 *\n"
"         stry(j - 2) * istrx +\n"
"         la(i, j - 2, k) * met(4, i, j - 2, k) *\n"
"         met(1, i, j - 2, k) * dwdrm2 * istrx)) +\n"
"      c1 * (la(i, j + 1, k) * met(2, i, j + 1, k) *\n"
"          met(1, i, j + 1, k) * dudrp1 +\n"
"          (2 * mu(i, j + 1, k) + la(i, j + 1, k)) *\n"
"          met(3, i, j + 1, k) * met(1, i, j + 1, k) * dvdrp1 *\n"
"          stry(j + 1) * istrx +\n"
"          la(i, j + 1, k) * met(4, i, j + 1, k) *\n"
"          met(1, i, j + 1, k) * dwdrp1 * istrx -\n"
"          (la(i, j - 1, k) * met(2, i, j - 1, k) *\n"
"           met(1, i, j - 1, k) * dudrm1 +\n"
"           (2 * mu(i, j - 1, k) + la(i, j - 1, k)) *\n"
"           met(3, i, j - 1, k) * met(1, i, j - 1, k) * dvdrm1 *\n"
"           stry(j - 1) * istrx +\n"
"           la(i, j - 1, k) * met(4, i, j - 1, k) *\n"
"           met(1, i, j - 1, k) * dwdrm1 * istrx));\n"
"\n"
"    // rq derivatives (w-eq)\n"
"    // 39 ops, tot=4845\n"
"    r3 += (c2 * (mu(i, j + 2, k) * met(3, i, j + 2, k) *\n"
"          met(1, i, j + 2, k) * dwdrp2 * stry(j + 2) +\n"
"          mu(i, j + 2, k) * met(4, i, j + 2, k) *\n"
"          met(1, i, j + 2, k) * dvdrp2 -\n"
"          (mu(i, j - 2, k) * met(3, i, j - 2, k) *\n"
"           met(1, i, j - 2, k) * dwdrm2 * stry(j - 2) +\n"
"           mu(i, j - 2, k) * met(4, i, j - 2, k) *\n"
"           met(1, i, j - 2, k) * dvdrm2)) +\n"
"        c1 * (mu(i, j + 1, k) * met(3, i, j + 1, k) *\n"
"          met(1, i, j + 1, k) * dwdrp1 * stry(j + 1) +\n"
"          mu(i, j + 1, k) * met(4, i, j + 1, k) *\n"
"          met(1, i, j + 1, k) * dvdrp1 -\n"
"          (mu(i, j - 1, k) * met(3, i, j - 1, k) *\n"
"           met(1, i, j - 1, k) * dwdrm1 * stry(j - 1) +\n"
"           mu(i, j - 1, k) * met(4, i, j - 1, k) *\n"
"           met(1, i, j - 1, k) * dvdrm1))) *\n"
"      istrx;\n"
"\n"
"    // pr and qr derivatives at once\n"
"    // in loop: 8*(53+53+43) = 1192 ops, tot=6037\n"
"    //#pragma unroll 8\n"
"    for (int q = nk - 7; q <= nk; q++) {\n"
"      // (u-eq)\n"
"      // 53 ops\n"
"      r1 -= bope(nk - k + 1, nk - q + 1) *\n"
"        (\n"
"         // pr\n"
"         (2 * mu(i, j, q) + la(i, j, q)) * met(2, i, j, q) *\n"
"         met(1, i, j, q) *\n"
"         (c2 * (u(1, i + 2, j, q) - u(1, i - 2, j, q)) +\n"
"          c1 * (u(1, i + 1, j, q) - u(1, i - 1, j, q))) *\n"
"         strx(i) * istry +\n"
"         mu(i, j, q) * met(3, i, j, q) * met(1, i, j, q) *\n"
"         (c2 * (u(2, i + 2, j, q) - u(2, i - 2, j, q)) +\n"
"          c1 * (u(2, i + 1, j, q) - u(2, i - 1, j, q))) +\n"
"         mu(i, j, q) * met(4, i, j, q) * met(1, i, j, q) *\n"
"         (c2 * (u(3, i + 2, j, q) - u(3, i - 2, j, q)) +\n"
"          c1 * (u(3, i + 1, j, q) - u(3, i - 1, j, q))) *\n"
"         istry\n"
"         // qr\n"
"         + mu(i, j, q) * met(3, i, j, q) * met(1, i, j, q) *\n"
"         (c2 * (u(1, i, j + 2, q) - u(1, i, j - 2, q)) +\n"
"          c1 * (u(1, i, j + 1, q) - u(1, i, j - 1, q))) *\n"
"         stry(j) * istrx +\n"
"         la(i, j, q) * met(2, i, j, q) * met(1, i, j, q) *\n"
"         (c2 * (u(2, i, j + 2, q) - u(2, i, j - 2, q)) +\n"
"          c1 * (u(2, i, j + 1, q) - u(2, i, j - 1, q))));\n"
"\n"
"      // (v-eq)\n"
"      // 53 ops\n"
"      r2 -= bope(nk - k + 1, nk - q + 1) *\n"
"        (\n"
"         // pr\n"
"         la(i, j, q) * met(3, i, j, q) * met(1, i, j, q) *\n"
"         (c2 * (u(1, i + 2, j, q) - u(1, i - 2, j, q)) +\n"
"          c1 * (u(1, i + 1, j, q) - u(1, i - 1, j, q))) +\n"
"         mu(i, j, q) * met(2, i, j, q) * met(1, i, j, q) *\n"
"         (c2 * (u(2, i + 2, j, q) - u(2, i - 2, j, q)) +\n"
"          c1 * (u(2, i + 1, j, q) - u(2, i - 1, j, q))) *\n"
"         strx(i) * istry\n"
"         // qr\n"
"         + mu(i, j, q) * met(2, i, j, q) * met(1, i, j, q) *\n"
"         (c2 * (u(1, i, j + 2, q) - u(1, i, j - 2, q)) +\n"
"          c1 * (u(1, i, j + 1, q) - u(1, i, j - 1, q))) +\n"
"         (2 * mu(i, j, q) + la(i, j, q)) * met(3, i, j, q) *\n"
"         met(1, i, j, q) *\n"
"         (c2 * (u(2, i, j + 2, q) - u(2, i, j - 2, q)) +\n"
"          c1 * (u(2, i, j + 1, q) - u(2, i, j - 1, q))) *\n"
"         stry(j) * istrx +\n"
"         mu(i, j, q) * met(4, i, j, q) * met(1, i, j, q) *\n"
"         (c2 * (u(3, i, j + 2, q) - u(3, i, j - 2, q)) +\n"
"          c1 * (u(3, i, j + 1, q) - u(3, i, j - 1, q))) *\n"
"         istrx);\n"
"\n"
"      // (w-eq)\n"
"      // 43 ops\n"
"      r3 -= bope(nk - k + 1, nk - q + 1) *\n"
"        (\n"
"         // pr\n"
"         la(i, j, q) * met(4, i, j, q) * met(1, i, j, q) *\n"
"         (c2 * (u(1, i + 2, j, q) - u(1, i - 2, j, q)) +\n"
"          c1 * (u(1, i + 1, j, q) - u(1, i - 1, j, q))) *\n"
"         istry +\n"
"         mu(i, j, q) * met(2, i, j, q) * met(1, i, j, q) *\n"
"         (c2 * (u(3, i + 2, j, q) - u(3, i - 2, j, q)) +\n"
"          c1 * (u(3, i + 1, j, q) - u(3, i - 1, j, q))) *\n"
"         strx(i) * istry\n"
"         // qr\n"
"         + mu(i, j, q) * met(3, i, j, q) * met(1, i, j, q) *\n"
"         (c2 * (u(3, i, j + 2, q) - u(3, i, j - 2, q)) +\n"
"          c1 * (u(3, i, j + 1, q) - u(3, i, j - 1, q))) *\n"
"         stry(j) * istrx +\n"
"         la(i, j, q) * met(4, i, j, q) * met(1, i, j, q) *\n"
"         (c2 * (u(2, i, j + 2, q) - u(2, i, j - 2, q)) +\n"
"          c1 * (u(2, i, j + 1, q) - u(2, i, j - 1, q))) *\n"
"         istrx);\n"
"    }\n"
"\n"
"    // 12 ops, tot=6049\n"
"    lu(1, i, j, k) = a1 * lu(1, i, j, k) + sgn * r1 * ijac;\n"
"    lu(2, i, j, k) = a1 * lu(2, i, j, k) + sgn * r2 * ijac;\n"
"    lu(3, i, j, k) = a1 * lu(3, i, j, k) + sgn * r3 * ijac;\n"
"  }\n"
"}\n"
;
